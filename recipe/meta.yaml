{% set name = "mlflow" %}
{% set version = "2.0.1" %}
{% set sha256 = "7ce6caf3c6acb022d6f5ce8a0995a92be1db524ae16aade1f83da661cdf993de" %}

# MLFlow offers two variants, a "normal" install and a "skinny" install with
# a reduced installation and fewer dependencies. The skinny installation is obtained
# by setting the environment variable MLFLOW_SKINNY at pip install time. For conda
# we accomplish this with two conda packages, mflow and mlflow-skinny. Note that this
# is not the same as matplotlib-base/matplotlib, where the only differences is the
# dependency set; the installed code is different as well.

{% if mlflow_variant == "skinny" %}
{% set mlflow_suffix = "-skinny" %}
{% set mlflow_other = "" %}
{% else %}
{% set mlflow_suffix = "" %}
{% set mlflow_other = "-skinny" %}
{% endif %}

package:
  name: mlflow{{ mlflow_suffix }}
  version: {{ version }}

source:
  url: https://pypi.io/packages/source/{{ name[0] }}/{{ name }}/{{ name }}-{{ version }}.tar.gz
  sha256: {{ sha256 }}

build:
  number: 0
  entry_points:
    - mlflow=mlflow.cli:cli
  skip: true  # [py<38 or s390x]
  script: |
    export MLFLOW_SKINNY=1  # [not win and mlflow_variant == "skinny"]
    set MLFLOW_SKINNY=1  # [win and mlflow_variant == "skinny"]
    {{ PYTHON }} -m pip install . --no-deps --ignore-installed -vv

requirements:
  host:
    - pip
    - python
    - setuptools
    - wheel
  run:
    - python
    - click >=7.0,<9.0.0a1
    - cloudpickle <3.0.0a0
    - databricks-cli >=0.8.7,<1.0.0a0
    - entrypoints <1.0.0a0
    - gitpython >=2.1.0,<4.0.0a0
    - pyyaml >=5.1,<7.0.0a0
    - protobuf >=3.12.0,<5.0.0a0
    - pytz <2023
    - requests >=2.17.3,<3.0.0a0
    - packaging <22
    - importlib-metadata >=3.7.0,!=4.7.0,<6.0.0a0
    - sqlparse >=0.4.0,<1.0.0a0
    - alembic <2.0.0a  # [mlflow_variant != "skinny"]
    - docker-py >=4.0.0,<7.0.0a0  # [mlflow_variant != "skinny"]
    - flask <3.0.0a0  # [mlflow_variant != "skinny"]
    - numpy <2.0.0a0  # [mlflow_variant != "skinny"]
    - scipy <2.0.0a0  # [mlflow_variant != "skinny"]
    - pandas <2.0.0a0  # [mlflow_variant != "skinny"]
    - querystring_parser <2.0.0a0  # [mlflow_variant != "skinny"]
    - sqlalchemy >=1.4.0,<2.0.0a0  # [mlflow_variant != "skinny"]
    - gunicorn <21  # [not win and mlflow_variant != "skinny"]
    - waitress <3  # [win and mlflow_variant != "skinny"]
    - scikit-learn <2.0.0a0  # [mlflow_variant != "skinny"]
    - pyarrow >=4.0.0,<11.0.0a0  # [mlflow_variant != "skinny"]
    - shap >=0.40,<1.0.0a0  # [mlflow_variant != "skinny"]
    - markdown >=3.3,<4.0.0a0  # [mlflow_variant != "skinny"]
    - jinja2 >=2.11,<4.0.0a0  # [not win and mlflow_variant != "skinny"]
    - jinja2 >=3,<4.0.0a0  # [win and mlflow_variant != "skinny"]
    - matplotlib-base <4.0.0a0  # [mlflow_variant != "skinny"]
  run_constrained:
    - mlflow{{ mlflow_other }} <0a0
    - mxnet !=1.8.0
    - fastai >=2.4.1
    - spacy >=3.3.0
    - tensorflow >=2.8.0
    - torch >=1.11.0
    - torchvision >=0.12.0
    - pytorch_lightning >=1.5.10
    - xgboost >=0.82
    - onnx >=1.11.0
test:
  imports:
    - mlflow
    - mlflow.artifacts
    - mlflow.azure
    - mlflow.deployments
    - mlflow.projects
    - mlflow.protos
    - mlflow.rfunc
    - mlflow.store
    - mlflow.tracking
    - mlflow.utils
    - mlflow.entities  # [mlflow_variant != "skinny"]
    - mlflow.fastai  # [mlflow_variant != "skinny"]
    - mlflow.gluon  # [mlflow_variant != "skinny"]
    - mlflow.models  # [mlflow_variant != "skinny"]
    - mlflow.paddle  # [mlflow_variant != "skinny"]
    - mlflow.pyfunc  # [mlflow_variant != "skinny"]
    - mlflow.pytorch  # [mlflow_variant != "skinny"]
    - mlflow.recipes  # [mlflow_variant != "skinny"]
    - mlflow.sagemaker  # [mlflow_variant != "skinny"]
    - mlflow.server  # [mlflow_variant != "skinny"]
    - mlflow.tensorflow  # [mlflow_variant != "skinny"]
    - mlflow.types  # [mlflow_variant != "skinny"]
    - mlflow.xgboost  # [mlflow_variant != "skinny"]
  commands:
    - mlflow --help
    - pip check
  requires:
    - pip

about:
  home: https://mlflow.org/
{% if mlflow_variant != "skinny" %}
  summary: "MLflow: A Machine Learning Lifecycle Platform"
{% else %}
  summary: "MLflow Skinny: A Lightweight Machine Learning Lifecycle Platform Client"
{% endif %}
  description: |
    MLflow is a platform to streamline machine learning development, including tracking
    experiments, packaging code into reproducible runs, and sharing and deploying models.
    MLflow offers a set of lightweight APIs that can be used with any existing machine
    learning application or library (TensorFlow, PyTorch, XGBoost, etc), wherever you
    currently run ML code (e.g. in notebooks, standalone applications or the cloud).
  license: Apache-2.0
  license_family: APACHE
  license_file: LICENSE.txt
  license_url: https://github.com/AnacondaRecipes/mlflow-feedstock/blob/main/LICENSE.txt
  doc_url: https://mlflow.org
  doc_source_url: https://github.com/mlflow/mlflow/tree/master/docs
  dev_url: https://github.com/mlflow/mlflow

extra:
  feedstock-name: mlflow
  recipe-maintainers:
    - harupy
    - aarondav
    - ahirreddy
    - andrewmchen
    - aveshcsingh
    - dbczumar
    - jaroslawk
    - mateiz
    - mparkhe
    - pogil
    - smurching
    - sueann
    - tomasatdatabricks
    - xhochy
    - zangr
    - janjagusch
