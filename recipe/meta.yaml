{% set name = "mlflow" %}
{% set version = "2.0.1" %}
{% set sha256 = "7ce6caf3c6acb022d6f5ce8a0995a92be1db524ae16aade1f83da661cdf993de" %}
{% if mlflow_variant == "skinny" %}
{% set mlflow_suffix = "-skinny" %}
{% set mlflow_other = "" %}
{% else %}
{% set mlflow_suffix = "" %}
{% set mlflow_other = "-skinny" %}
{% endif %}

package:
  name: mlflow-split
  version: {{ version }}

source:
  url: https://pypi.io/packages/source/{{ name[0] }}/{{ name }}/{{ name }}-{{ version }}.tar.gz
  sha256: {{ sha256 }}

build:
  number: 0

outputs:
  - name: mlflow{{ mlflow_suffix }}
    script: build-mlflow.sh  # [unix]
    script: build-mlflow.bat  # [win]
    version: {{ version }}
    build:
      entry_points:
        - mlflow=mlflow.cli:cli
      skip: true  # [py<38]
    requirements:
      host:
        - pip
        - python
        - setuptools
        - wheel
      run:
        - python
        - click >=7.0,<9.0.0a1
        - cloudpickle <3.0.0a0
        - databricks-cli >=0.8.7,<1.0.0a0
        - entrypoints <1.0.0a0
        - gitpython >=2.1.0,<4.0.0a0
        - pyyaml >=5.1,<7.0.0a0
        - pytz <2023
        - requests >=2.17.3,<3.0.0a0
        - packaging <22
        - importlib-metadata >=3.7.0,!=4.7.0,<6.0.0a0
        - sqlparse >=0.4.0,<1.0.0a0
        - alembic <2.0.0a  # [mlflow_variant != "skinny"]
        - docker-py >=4.0.0,<7.0.0a0  # [mlflow_variant != "skinny"]
        - flask <3.0.0a0  # [mlflow_variant != "skinny"]
        - gunicorn <21  # [not win and mlflow_variant != "skinny"]
        - numpy <2.0.0a0  # [mlflow_variant != "skinny"]
        - pandas <2.0.0a0  # [mlflow_variant != "skinny"]
        - querystring_parser <2.0.0a0  # [mlflow_variant != "skinny"]
        - scikit-learn <2.0.0a0  # [mlflow_variant != "skinny"]
        - pyarrow >=4.0.0,<11.0.0a0  # [mlflow_variant != "skinny"]
        - shap >=0.40,<1.0.0a0  # [mlflow_variant != "skinny"]
        - markdown >=3.3,<4.0.0a0  # [mlflow_variant != "skinny"]
        - jinja2 >=2.11,<4.0.0a0  # [not win and mlflow_variant != "skinny"]
        - jinja2 >=3,<4.0.0a0  # [win and mlflow_variant != "skinny"]
        - matplotlib-base <4.0.0a0
      run_constrained:
        - mlflow{{ mlflow_other }} <0a0
        - mxnet !=1.8.0
        - fastai >=2.4.1
        - spacy >=3.3.0
        - tensorflow >=2.8.0
        - torch >=1.11.0
        - torchvision >=0.12.0
        - pytorch_lightning >=1.5.10
        - xgboost >=0.82
        - onnx >=1.11.0
    test:
      imports:
        - mlflow
        - mlflow.artifacts
        - mlflow.azure
        - mlflow.deployments
        - mlflow.entities
        - mlflow.fastai
        - mlflow.gluon
        - mlflow.models
        - mlflow.paddle
        - mlflow.projects
        - mlflow.protos
        - mlflow.pyfunc
        - mlflow.pytorch
        - mlflow.recipes
        - mlflow.rfunc
        - mlflow.sagemaker 
        - mlflow.server
        - mlflow.store
        - mlflow.tensorflow
        - mlflow.tracking
        - mlflow.types
        - mlflow.utils
        - mlflow.xgboost
      commands:
        - mlflow --help
        - pip check
      requires:
        - pip

  - name: mlflow-ui-dbg{{ mlflow_suffix }}
    build:
      skip: true
    version: {{ version }}
    requirements:
      host:
        - python
        - pip
        - wheel
        - setuptools
        - openssl
        - {{ pin_subpackage('mlflow' + mlflow_suffix, exact=True) }}
      run:
        - python
        - {{ pin_subpackage('mlflow' + mlflow_suffix, exact=True) }}
    script: build-mlflow.bat  # [win]
    script: build-mlflow.sh  # [unix]
    test:
      commands:
        - pip check
      requires:
        - pip

about:
  home: https://mlflow.org/
  summary: MLflow is an open source platform for the machine learning lifecycle.
  description: |
    MLflow is a platform to streamline machine learning development, including tracking
    experiments, packaging code into reproducible runs, and sharing and deploying models.
    MLflow offers a set of lightweight APIs that can be used with any existing machine
    learning application or library (TensorFlow, PyTorch, XGBoost, etc), wherever you
    currently run ML code (e.g. in notebooks, standalone applications or the cloud).
  license: Apache-2.0
  license_family: APACHE
  license_file: LICENSE
  license_url: https://github.com/AnacondaRecipes/mlflow-feedstock/blob/main/LICENSE.txt
  doc_url: https://mlflow.org
  doc_source_url: https://github.com/mlflow/mlflow/tree/master/docs
  dev_url: https://github.com/mlflow/mlflow

extra:
  feedstock-name: mlflow
  recipe-maintainers:
    - harupy
    - aarondav
    - ahirreddy
    - andrewmchen
    - aveshcsingh
    - dbczumar
    - jaroslawk
    - mateiz
    - mparkhe
    - pogil
    - smurching
    - sueann
    - tomasatdatabricks
    - xhochy
    - zangr
    - janjagusch
