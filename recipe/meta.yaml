{% set name = "mlflow" %}
{% set version = "2.18.0" %}

package:
  name: mlflow-split
  version: {{ version }}

source:
  url: https://github.com/mlflow/mlflow/archive/refs/tags/v{{ version }}.zip
  sha256: 910ad1e2fce93b412063637d465e9291c99678a3bbccbf2b4f7736887321f44b

build:
  number: 0

requirements:
  host:
    - pip
    - python
    - setuptools
    - wheel

outputs:
  - name: mlflow-skinny
    script: build-mlflow.sh   # [unix]
    script: build-mlflow.bat  # [win]
    version: {{ version }}
    build:
      entry_points:
        - mlflow=mlflow.cli:cli
    requirements:
      host:
        - pip
        - python
        - setuptools
      run:
        - python
        - cachetools<6,>=5.0.0
        - click >=7.0,<9
        - cloudpickle <4
        - databricks-sdk <1,>=0.20.0
        - gitpython >=3.1.9,<4
        - importlib-metadata <9,>=3.7.0,!=4.7.0
        - opentelemetry-api<3,>=1.9.0
        - opentelemetry-sdk<3,>=1.9.0
        - packaging <25
        - protobuf >=3.12.0,<6
        # required on imports for win
        - pytz <2025  # [win]
        - pyyaml >=5.1,<7
        - requests >=2.17.3,<3
        - sqlparse >=0.4.0,<1
      run_constrained:
        - mlflow <0a0
        # extras
        - google-cloud-storage >=1.30.0
        - azureml-core >=1.2.0
        # mlserver
        - mlserver >=1.2.0, !=1.3.1
        - mlserver-mlflow >=1.2.0,!=1.3.1
        # mlflow-gateway, mlflow-skinny-gateway, genai
        - pydantic >=1.0,<3
        - fastapi <1
        - uvicorn-standard <1
        - watchfiles <1
        - aiohttp <4
        - boto3 >=1.28.56,<2
        - tiktoken <1
        - slowapi >=0.1.9,<1
        # databricks
        - azure-storage-file-datalake >12
        - google-cloud-storage >=1.30.0
        - boto3 >1
        # langchain
        - langchain >=0.1.0,<=0.3.7
    test:
      imports:
        - mlflow
        - mlflow.entities
        - mlflow.projects
        - mlflow.protos
        - mlflow.rfunc
        - mlflow.store
        - mlflow.tracking
        - mlflow.utils
      source_files:
        - tests/artifacts
      commands:
        - mlflow --help
        - mlflow --version
        - pip list | grep "mlflow-skinny \+${PKG_VERSION}"  # [unix]
        - pip check
        - set  # [win]
        # smoke tests
        # skip test_load_image because numpy is not included in the skinny variant
        # skip test_log_artifact_windows_path_with_hostname (run only for win)
        # because needs a data file
        - pytest -vv tests/artifacts -k "not (test_load_image or test_log_artifact_windows_path_with_hostname)"
        # test from .github/workflows/test-package-build.yml#L97
        - python -c "import mlflow; print(mlflow.__version__); assert(mlflow.__version__ == '{{ version }}');"
      requires:
        - pip
        - pytest
        - pillow
        - numpy

  - name: mlflow
    script: build-mlflow.sh   # [unix]
    script: build-mlflow.bat  # [win]
    version: {{ version }}
    requirements:
      host:
        - pip
        - python
        - setuptools
      run:
        - alembic <2,!=1.10
        - docker-py >=4.0.0,<8
        - flask <4
        - graphene<4
        - gunicorn <24  # [not win]
        - jinja2 <4,>=2.11  # [not win]
        - jinja2 <4,>=3.0  # [win]
        - markdown <4,>=3.3
        - matplotlib-base <4
        - numpy <3
        - pandas <3
        - prometheus_flask_exporter <1
        - pyarrow <19,>=4.0.0
        - querystring_parser <2
        - scikit-learn <2
        - scipy <2
        - sqlalchemy >=1.4.0,<3
        - waitress <4  # [win]
    test:
      imports:
        - mlflow
        - mlflow.entities
        - mlflow.models
        - mlflow.projects
        - mlflow.protos
        - mlflow.pyfunc
        - mlflow.pytorch
        - mlflow.rfunc
        - mlflow.sagemaker
        - mlflow.server
        - mlflow.server.prometheus_exporter
        - mlflow.store
        - mlflow.tracking
        - mlflow.utils
      source_files:
        - tests/artifacts
      commands:
        - mlflow --help
        - mlflow --version
        - mlflow recipes --help
        # This should not be packaged
        - test ! -f $SP_DIR/pylint_plugins  # [unix]
        - pip check
        - pip list | grep "mlflow \+${PKG_VERSION}"  # [unix]
        - set  # [win]
        # smoke tests
        # skip test_log_artifact_windows_path_with_hostname (run only for win)
        # because needs a data file
        - pytest -vv tests/artifacts -k "not test_log_artifact_windows_path_with_hostname"
        # test from .github/workflows/test-package-build.yml#L97
        - python -c "import mlflow; print(mlflow.__version__); assert(mlflow.__version__ == '{{ version }}');"
      requires:
        - pip
        - pytest
        - pillow
        - numpy

about:
  home: https://mlflow.org/
  license: Apache-2.0
  license_family: APACHE
  license_file: LICENSE.txt
  summary: MLflow is an open source platform for the machine learning lifecycle.
  doc_url: https://mlflow.org
  dev_url: https://github.com/mlflow/mlflow

extra:
  feedstock-name: mlflow
  recipe-maintainers:
    - daniellok-db
    - B-Step62
    - serena-ruan
    - BenWilson2
    - WeichenXu123
    - harupy
    - dbczumar
    - jaroslawk
    - xhochy
    - janjagusch
